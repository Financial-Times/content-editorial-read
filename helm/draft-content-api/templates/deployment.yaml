apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
{{- if not .Values.eksCluster }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "{{ .Values.service.name }}"
            topologyKey: "kubernetes.io/hostname"
{{- end }}
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DRAFT_CONTENT_RW_ENDPOINT
          value: "http://generic-rw-aurora:8080"
        - name: DRAFT_CONTENT_MAM_ENDPOINT
          value: "http://methode-article-mapper:8080"
        - name: DRAFT_CONTENT_UCV_ENDPOINT
          value: "http://upp-content-validator:8080"
        - name: CONTENT_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: content-endpoint
        - name: APP_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: timeout-config
              key: draft-content-api-timeout
        - name: CAPI_APIKEY
          valueFrom:
            secretKeyRef:
              name: draft-content-api
              key: upp-api-key
        ports:
        - containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
        resources:
{{ toYaml .Values.resources | indent 12 }}
